[{"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\index.js":"1","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\App.js":"2","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\reportWebVitals.js":"3","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\login_component\\register.js":"4","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\user_component\\UserForm.js":"5","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\login_component\\login.js":"6","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\user_component\\Users.js":"7","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\admin_component\\create_training.js":"8","D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\admin_component\\view_trainings.js":"9"},{"size":717,"mtime":1694062910429,"results":"10","hashOfConfig":"11"},{"size":725,"mtime":1694167531444,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1693988886136,"results":"13","hashOfConfig":"11"},{"size":4814,"mtime":1694175156072,"results":"14","hashOfConfig":"11"},{"size":3805,"mtime":1694023772668,"results":"15","hashOfConfig":"11"},{"size":2672,"mtime":1694175124415,"results":"16","hashOfConfig":"11"},{"size":3889,"mtime":1694001816522,"results":"17","hashOfConfig":"11"},{"size":10819,"mtime":1694166170000,"results":"18","hashOfConfig":"11"},{"size":4427,"mtime":1694174404270,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6nrhf",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\index.js",[],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\App.js",["49","50","51"],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\reportWebVitals.js",[],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\login_component\\register.js",["52"],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\user_component\\UserForm.js",["53"],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\login_component\\login.js",[],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\user_component\\Users.js",[],[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\admin_component\\create_training.js",["54","55","56","57","58"],[],"import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './train.css'\r\nimport React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\nimport View_training from './view_trainings';\r\n// import Swal from 'sweetalert2';\r\n\r\n\r\nfunction MyFormModal(props) {\r\n    const [startDate, setStartDate] = useState(new Date());\r\n    const [endDate, setEndDate] = useState(new Date());\r\n    const [training, setTraining] = useState({\r\n        training_name: '',\r\n        trainer: '',\r\n        skill: '',\r\n        description: '',\r\n        domain: 'Full Stack', // Default domain value\r\n        seats: 1, // Default seats value\r\n    });\r\n\r\n    const handleSubmit = async (e) => {\r\n        console.log(\"abcd check\",startDate,endDate)\r\n        console.log(\"working\",training);\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('http://localhost:5001/api/data', training, {\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log('Scheduled training:', response.data);\r\n                // Swal.fire('Training Created Successfully');\r\n            } else {\r\n                console.error('Set training failed');\r\n            }\r\n        } catch (error) {\r\n            console.error('Registering error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n\r\n            <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Training Schedule\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n\r\n                <Modal.Body>\r\n                    <div className=\"train\">\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-md-center\">\r\n                                <div className=\"col-xs\" >\r\n\r\n                                    <form onSubmit={handleSubmit}>\r\n\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"trainingName\">Training Name</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"trainingName\"\r\n                                                placeholder=\"Training Name\"\r\n                                                value={training.training_name}\r\n                                                onChange={(e) => setTraining({ ...training, training_name: e.target.value })}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"trainer\">Trainer</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"trainer\"\r\n                                                placeholder=\"Trainer\"\r\n                                                value={training.trainer}\r\n                                                onChange={(e) => setTraining({ ...training, trainer: e.target.value })}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"skillTitle\">Skill Title</label>\r\n                                            <input\r\n                                                type=\"text\"\r\n                                                id=\"skillTitle\"\r\n                                                placeholder=\"Title\"\r\n                                                value={training.skill}\r\n                                                onChange={(e) => setTraining({ ...training, skill: e.target.value })}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"description\">Description</label>\r\n                                            <textarea\r\n                                                id=\"description\"\r\n                                                placeholder=\"Leave a comment here\"\r\n                                                lue={training.description}\r\n                                                onChange={(e) => setTraining({ ...training, description: e.target.value })}\r\n                                            ></textarea>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"domain\">Domain</label>\r\n                                            <select\r\n                                                id=\"domain\"\r\n                                                value={training.domain}\r\n                                                onChange={(e) => setTraining({ ...training, domain: e.target.value })}\r\n                                            >\r\n                                                <option value=\"Full Stack\">Full Stack</option>\r\n                                                <option value=\"Data\">Data</option>\r\n                                                <option value=\"Consulting\">Consulting</option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"startDate\">Start Date</label>\r\n                                            <DatePicker\r\n                                                selected={startDate}\r\n                                                onChange={(date) => {\r\n                                                    setStartDate(date);\r\n                                                    setTraining({ ...training, startDate: date }); \r\n                                                }}\r\n                                                dateFormat=\"Pp\"\r\n                                                showTimeSelect\r\n                                                timeFormat=\"p\"\r\n                                                minDate={new Date()}\r\n                                            />\r\n                                        \r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"endDate\">End Date</label>\r\n                                            <DatePicker\r\n                                                selected={endDate}\r\n                                                onChange={(date) => \r\n                                                    {\r\n                                                        setEndDate(date);\r\n                                                        setTraining({ ...training, endDate: date }); \r\n                                                    }}\r\n                                                dateFormat=\"Pp\"\r\n                                                showTimeSelect\r\n                                                timeFormat=\"p\"\r\n                                                minDate={new Date()}\r\n                                            />\r\n                                            {/* <input\r\n                                                type=\"date\"\r\n                                                id=\"endDate\"\r\n                                                min=\"<?= date('Y-m-d') ?>\"\r\n                                                value={training.endDate}\r\n                                                onChange={(e) => setTraining({ ...training, endDate: e.target.value })}\r\n                                            /> */}\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label for=\"seats\">No of Seats</label>\r\n                                            <input\r\n                                                type=\"number\"\r\n                                                id=\"seats\"\r\n                                                placeholder=\"Seats\"\r\n                                                min=\"1\"\r\n                                                max=\"99\"\r\n                                                value={training.seats}\r\n                                                onChange={(e) => setTraining({ ...training, seats: e.target.value })}\r\n                                            />\r\n                                        </div>\r\n                                        <Button type=\"submit\" className=\"button_\" name=\"Submit\">\r\n                                            Submit\r\n                                        </Button>\r\n                                        <Button className=\"close\" onClick={props.onHide}>\r\n                                            Close\r\n                                        </Button>\r\n\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n\r\n\r\n\r\n\r\n                    <Modal.Footer>\r\n\r\n\r\n                    </Modal.Footer>\r\n\r\n\r\n                </Modal.Body>\r\n            </Modal >\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Admin_training() {\r\n    const [modalShow, setModalShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className='maincontent'>\r\n                <h1>Welcome</h1>\r\n                <hr></hr>\r\n                <Button className='schedule' variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                    Schedule Training\r\n                </Button>\r\n\r\n\r\n                <MyFormModal\r\n                    show={modalShow}\r\n                    onHide={() => setModalShow(false)}\r\n                />\r\n                <View_training />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n",[],"D:\\Full Stack Project\\Mini_project_old_code\\frontend\\src\\admin_component\\view_trainings.js",[],[],{"ruleId":"59","severity":1,"message":"60","line":6,"column":8,"nodeType":"61","messageId":"62","endLine":6,"endColumn":13},{"ruleId":"59","severity":1,"message":"63","line":8,"column":8,"nodeType":"61","messageId":"62","endLine":8,"endColumn":21},{"ruleId":"64","severity":1,"message":"65","line":15,"column":47,"nodeType":"66","messageId":"67","endLine":15,"endColumn":64},{"ruleId":"68","severity":1,"message":"69","line":48,"column":6,"nodeType":"70","endLine":48,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":35,"column":41,"nodeType":"66","endLine":35,"endColumn":79},{"ruleId":"59","severity":1,"message":"74","line":1,"column":8,"nodeType":"61","messageId":"62","endLine":1,"endColumn":17},{"ruleId":"59","severity":1,"message":"75","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":11},{"ruleId":"59","severity":1,"message":"76","line":3,"column":8,"nodeType":"61","messageId":"62","endLine":3,"endColumn":11},{"ruleId":"59","severity":1,"message":"77","line":4,"column":8,"nodeType":"61","messageId":"62","endLine":4,"endColumn":12},{"ruleId":"64","severity":1,"message":"78","line":220,"column":17,"nodeType":"66","messageId":"67","endLine":220,"endColumn":34},"no-unused-vars","'Users' is defined but never used.","Identifier","unusedVar","'View_training' is defined but never used.","react/jsx-pascal-case","Imported JSX component Admin_training must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'images.length'. Either include it or remove the dependency array.","ArrayExpression",["79"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","Imported JSX component View_training must be in PascalCase or SCREAMING_SNAKE_CASE",{"desc":"80","fix":"81"},"Update the dependencies array to be: [images.length]",{"range":"82","text":"83"},[939,941],"[images.length]"]